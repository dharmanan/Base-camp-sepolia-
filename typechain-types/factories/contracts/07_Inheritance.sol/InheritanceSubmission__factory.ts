/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InheritanceSubmission,
  InheritanceSubmissionInterface,
} from "../../../contracts/07_Inheritance.sol/InheritanceSubmission";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_salesPerson",
        type: "address",
      },
      {
        internalType: "address",
        name: "_engineeringManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "engineeringManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salesPerson",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161019138038061019183398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b60d4806100bd6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630f628194146037578063687981dd14607f575b600080fd5b60005460569073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60015460569073ffffffffffffffffffffffffffffffffffffffff168156fea26469706673582212200a5482e669e9f2f64c87a5dc67af80f7a25bc93e07a653ac42815c1d8519728564736f6c63430008140033";

type InheritanceSubmissionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InheritanceSubmissionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InheritanceSubmission__factory extends ContractFactory {
  constructor(...args: InheritanceSubmissionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _salesPerson: AddressLike,
    _engineeringManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _salesPerson,
      _engineeringManager,
      overrides || {}
    );
  }
  override deploy(
    _salesPerson: AddressLike,
    _engineeringManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _salesPerson,
      _engineeringManager,
      overrides || {}
    ) as Promise<
      InheritanceSubmission & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): InheritanceSubmission__factory {
    return super.connect(runner) as InheritanceSubmission__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InheritanceSubmissionInterface {
    return new Interface(_abi) as InheritanceSubmissionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InheritanceSubmission {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as InheritanceSubmission;
  }
}
