/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "BasicMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicMath__factory>;
    getContractFactory(
      name: "ControlStructures",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ControlStructures__factory>;
    getContractFactory(
      name: "EmployeeStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmployeeStorage__factory>;
    getContractFactory(
      name: "ArraysExercise",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArraysExercise__factory>;
    getContractFactory(
      name: "FavoriteRecords",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FavoriteRecords__factory>;
    getContractFactory(
      name: "GarageManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GarageManager__factory>;
    getContractFactory(
      name: "Employee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Employee__factory>;
    getContractFactory(
      name: "EngineeringManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EngineeringManager__factory>;
    getContractFactory(
      name: "Hourly",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hourly__factory>;
    getContractFactory(
      name: "InheritanceSubmission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InheritanceSubmission__factory>;
    getContractFactory(
      name: "Manager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Manager__factory>;
    getContractFactory(
      name: "Salaried",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Salaried__factory>;
    getContractFactory(
      name: "Salesperson",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Salesperson__factory>;
    getContractFactory(
      name: "ImportsExercise",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ImportsExercise__factory>;
    getContractFactory(
      name: "ErrorTriageExercise",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ErrorTriageExercise__factory>;
    getContractFactory(
      name: "AddressBook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBook__factory>;
    getContractFactory(
      name: "AddressBookFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressBookFactory__factory>;
    getContractFactory(
      name: "UnburnableToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UnburnableToken__factory>;
    getContractFactory(
      name: "WeightedVoting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WeightedVoting__factory>;
    getContractFactory(
      name: "HaikuNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HaikuNFT__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lock__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "BasicMath",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicMath>;
    getContractAt(
      name: "ControlStructures",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ControlStructures>;
    getContractAt(
      name: "EmployeeStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EmployeeStorage>;
    getContractAt(
      name: "ArraysExercise",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ArraysExercise>;
    getContractAt(
      name: "FavoriteRecords",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.FavoriteRecords>;
    getContractAt(
      name: "GarageManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GarageManager>;
    getContractAt(
      name: "Employee",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Employee>;
    getContractAt(
      name: "EngineeringManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EngineeringManager>;
    getContractAt(
      name: "Hourly",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Hourly>;
    getContractAt(
      name: "InheritanceSubmission",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.InheritanceSubmission>;
    getContractAt(
      name: "Manager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Manager>;
    getContractAt(
      name: "Salaried",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Salaried>;
    getContractAt(
      name: "Salesperson",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Salesperson>;
    getContractAt(
      name: "ImportsExercise",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ImportsExercise>;
    getContractAt(
      name: "ErrorTriageExercise",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ErrorTriageExercise>;
    getContractAt(
      name: "AddressBook",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBook>;
    getContractAt(
      name: "AddressBookFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressBookFactory>;
    getContractAt(
      name: "UnburnableToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.UnburnableToken>;
    getContractAt(
      name: "WeightedVoting",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WeightedVoting>;
    getContractAt(
      name: "HaikuNFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HaikuNFT>;
    getContractAt(
      name: "Lock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Lock>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "BasicMath",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BasicMath>;
    deployContract(
      name: "ControlStructures",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ControlStructures>;
    deployContract(
      name: "EmployeeStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmployeeStorage>;
    deployContract(
      name: "ArraysExercise",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArraysExercise>;
    deployContract(
      name: "FavoriteRecords",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FavoriteRecords>;
    deployContract(
      name: "GarageManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GarageManager>;
    deployContract(
      name: "Employee",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Employee>;
    deployContract(
      name: "EngineeringManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EngineeringManager>;
    deployContract(
      name: "Hourly",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Hourly>;
    deployContract(
      name: "InheritanceSubmission",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritanceSubmission>;
    deployContract(
      name: "Manager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Manager>;
    deployContract(
      name: "Salaried",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Salaried>;
    deployContract(
      name: "Salesperson",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Salesperson>;
    deployContract(
      name: "ImportsExercise",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImportsExercise>;
    deployContract(
      name: "ErrorTriageExercise",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorTriageExercise>;
    deployContract(
      name: "AddressBook",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressBook>;
    deployContract(
      name: "AddressBookFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressBookFactory>;
    deployContract(
      name: "UnburnableToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UnburnableToken>;
    deployContract(
      name: "WeightedVoting",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WeightedVoting>;
    deployContract(
      name: "HaikuNFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HaikuNFT>;
    deployContract(
      name: "Lock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lock>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "BasicMath",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BasicMath>;
    deployContract(
      name: "ControlStructures",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ControlStructures>;
    deployContract(
      name: "EmployeeStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EmployeeStorage>;
    deployContract(
      name: "ArraysExercise",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ArraysExercise>;
    deployContract(
      name: "FavoriteRecords",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.FavoriteRecords>;
    deployContract(
      name: "GarageManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GarageManager>;
    deployContract(
      name: "Employee",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Employee>;
    deployContract(
      name: "EngineeringManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EngineeringManager>;
    deployContract(
      name: "Hourly",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Hourly>;
    deployContract(
      name: "InheritanceSubmission",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.InheritanceSubmission>;
    deployContract(
      name: "Manager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Manager>;
    deployContract(
      name: "Salaried",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Salaried>;
    deployContract(
      name: "Salesperson",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Salesperson>;
    deployContract(
      name: "ImportsExercise",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ImportsExercise>;
    deployContract(
      name: "ErrorTriageExercise",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ErrorTriageExercise>;
    deployContract(
      name: "AddressBook",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressBook>;
    deployContract(
      name: "AddressBookFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AddressBookFactory>;
    deployContract(
      name: "UnburnableToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.UnburnableToken>;
    deployContract(
      name: "WeightedVoting",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WeightedVoting>;
    deployContract(
      name: "HaikuNFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HaikuNFT>;
    deployContract(
      name: "Lock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Lock>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
