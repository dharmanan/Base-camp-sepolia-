/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Manager,
  ManagerInterface,
} from "../../../contracts/07_Inheritance.sol/Manager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_employeeId",
        type: "uint256",
      },
    ],
    name: "addReport",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "employeeIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetReports",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80637e3975361461004657806386e73dc31461006b578063a596d3c8146100ad575b600080fd5b610059610054366004610156565b6100b5565b60405190815260200160405180910390f35b6100ab610079366004610156565b600080546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630155565b005b6100ab6100d6565b600081815481106100c557600080fd5b600091825260209091200154905081565b604080516000808252602082019283905290516100f392906100f6565b50565b828054828255906000526020600020908101928215610131579160200282015b82811115610131578251825591602001919060010190610116565b5061013d929150610141565b5090565b5b8082111561013d5760008155600101610142565b60006020828403121561016857600080fd5b503591905056fea2646970667358221220a4b483689e7ea3c504bd202cf29c6c92afc1c1a972ee66a383793b57ace9934c64736f6c63430008140033";

type ManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Manager__factory extends ContractFactory {
  constructor(...args: ManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Manager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Manager__factory {
    return super.connect(runner) as Manager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ManagerInterface {
    return new Interface(_abi) as ManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Manager {
    return new Contract(address, _abi, runner) as unknown as Manager;
  }
}
