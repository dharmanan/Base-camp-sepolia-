/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ArraysExercise,
  ArraysExerciseInterface,
} from "../../../contracts/04_ArraysExercise.sol/ArraysExercise";

const _abi = [
  {
    inputs: [],
    name: "afterY2K",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_toAppend",
        type: "uint256[]",
      },
    ],
    name: "appendToNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumbers",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numbers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resetNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetSenders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTimestamps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unixTimestamp",
        type: "uint256",
      },
    ],
    name: "saveTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "senders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timestamps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101c060405260016080908152600260a052600360c052600460e052600561010052600661012052600761014052600861016052600961018052600a6101a081905261004d91600091610060565b5034801561005a57600080fd5b506100c5565b8280548282559060005260206000209081019282156100a0579160200282015b828111156100a0578251829060ff16905591602001919060010190610080565b506100ac9291506100b0565b5090565b5b808211156100ac57600081556001016100b1565b610787806100d46000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639977c78a11610076578063ade82bfd1161005b578063ade82bfd146101f2578063b1cebac5146101fa578063d39fa2331461020257600080fd5b80639977c78a14610135578063a00b7acd1461016057600080fd5b80637f66b1b8116100a75780637f66b1b8146100f757806389f915f6146100ff5780638bc33af31461011457600080fd5b806320aaf79a146100c35780634f9377db146100e2575b600080fd5b6100cb610215565b6040516100d992919061061d565b60405180910390f35b6100f56100f036600461067d565b6103e1565b005b6100f561042f565b61010761043d565b6040516100d991906106f2565b61012761012236600461070c565b610495565b6040519081526020016100d9565b61014861014336600461070c565b6104b6565b6040516001600160a01b0390911681526020016100d9565b6100f561016e36600461070c565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790556002805491820181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6100f56104e0565b6100f56104ec565b61012761021036600461070c565b61054f565b6002546060908190600090815b818110156102625763386d89d06002828154811061024257610242610725565b9060005260206000200154111561025a578260010192505b600101610222565b5060008267ffffffffffffffff81111561027e5761027e61073b565b6040519080825280602002602001820160405280156102a7578160200160208202803683370190505b50905060008367ffffffffffffffff8111156102c5576102c561073b565b6040519080825280602002602001820160405280156102ee578160200160208202803683370190505b5090506000805b848110156103d45763386d89d06002828154811061031557610315610725565b906000526020600020015411156103cc576002818154811061033957610339610725565b906000526020600020015484838151811061035657610356610725565b6020026020010181815250506001818154811061037557610375610725565b9060005260206000200160009054906101000a90046001600160a01b03168383815181106103a5576103a5610725565b60200260200101906001600160a01b031690816001600160a01b0316815250508160010191505b6001016102f5565b5091969095509350505050565b60005b8181101561042a57600083838381811061040057610400610725565b835460018082018655600095865260209586902092909502939093013592019190915550016103e4565b505050565b61043b6001600061055f565b565b6060600080548060200260200160405190810160405280929190818152602001828054801561048b57602002820191906000526020600020905b815481526020019060010190808311610477575b5050505050905090565b600281815481106104a557600080fd5b600091825260209091200154905081565b600181815481106104c657600080fd5b6000918252602090912001546001600160a01b0316905081565b61043b6002600061055f565b604080516101408101825260018152600260208201526003918101919091526004606082015260056080820152600660a0820152600760c0820152600860e08201526009610100820152600a610120820181905261054c9160009161057d565b50565b600081815481106104a557600080fd5b508054600082559060005260206000209081019061054c91906105cd565b8280548282559060005260206000209081019282156105bd579160200282015b828111156105bd578251829060ff1690559160200191906001019061059d565b506105c99291506105cd565b5090565b5b808211156105c957600081556001016105ce565b600081518084526020808501945080840160005b83811015610612578151875295820195908201906001016105f6565b509495945050505050565b60408152600061063060408301856105e2565b82810360208481019190915284518083528582019282019060005b818110156106705784516001600160a01b03168352938301939183019160010161064b565b5090979650505050505050565b6000806020838503121561069057600080fd5b823567ffffffffffffffff808211156106a857600080fd5b818501915085601f8301126106bc57600080fd5b8135818111156106cb57600080fd5b8660208260051b85010111156106e057600080fd5b60209290920196919550909350505050565b60208152600061070560208301846105e2565b9392505050565b60006020828403121561071e57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220cc72bffcd2c43d4315b56072e8125b0194db4fe745908e54cacdc0ca7b06799c64736f6c63430008140033";

type ArraysExerciseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArraysExerciseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArraysExercise__factory extends ContractFactory {
  constructor(...args: ArraysExerciseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArraysExercise & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArraysExercise__factory {
    return super.connect(runner) as ArraysExercise__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArraysExerciseInterface {
    return new Interface(_abi) as ArraysExerciseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArraysExercise {
    return new Contract(address, _abi, runner) as unknown as ArraysExercise;
  }
}
